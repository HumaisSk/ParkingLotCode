import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class ParkingLotTask {
	public static void main(String[] args) {
		Integer lotSize = 0;
		Integer slot = 1;
		Integer slotLeft = null;
		Boolean commandCheck = false;
		Integer createCommandCounter = 0;
		Map<Integer,String> carDetails = new TreeMap<>();
		List<Integer> allSlotsLeft = new ArrayList<>();
		Scanner scan = new Scanner(System.in);
		String input = scan.next();
		while (!"exit".equals(input) && !commandCheck) {
			if ("create_parking_lot".equals(input)) {
				lotSize = scan.nextInt();
				if(createCommandCounter > 0) {
					System.out.println("create_parking_lot command already invoked before, cannot recreate");
				}else if (lotSize <= 0) {
					System.out.println("Cannot create a parking lot with " + lotSize + " slots");
					System.out.println("Interactive command prompt exited");
					break;
				}else {
					createCommandCounter = 1;
					System.out.println("Created a parking lot with " + lotSize + " slots");
				}
				input = scan.next();
			} else if ("park".equals(input)) {
				String carReg = scan.next();
				String carColour = scan.next();
				Integer closestSlot = 0;
				if(!allSlotsLeft.isEmpty()) {
					closestSlot = Collections.min(allSlotsLeft);
				}else {
					closestSlot = lotSize + 1;
				}
				if(slot <= lotSize && slot <= closestSlot && !carDetails.containsKey(slot)) {
					carDetails.put(slot, carReg + " " + carColour);
					System.out.println("Allocated slot number: " + slot);
				} else if(closestSlot <= lotSize && closestSlot < slot && !carDetails.containsKey(closestSlot)) {
					carDetails.put(closestSlot, carReg + " " + carColour);
					allSlotsLeft.remove(closestSlot);
					slot -= 1;
					System.out.println("Allocated slot number: " + closestSlot);
				} else {
					slot -= 1;
					System.out.println("Sorry, parking lot is full");
				}
				slot += 1;
				input = scan.next();
			} else if ("leave".equals(input)) {
				slotLeft = scan.nextInt();
				allSlotsLeft.add(slotLeft);
				carDetails.remove(slotLeft);
				System.out.println("Slot number " + slotLeft + " is free");
				input = scan.next();
			} else if ("status".equals(input)) {
				List<Integer> allSlots = new ArrayList<Integer>();
				List<String> allCarRegs = new ArrayList<String>();
				List<String> allCarColour = new ArrayList<String>();
				String value = null;
				String regNo = null;
				String colour = null;
				Iterator<Map.Entry<Integer, String>> iter = carDetails.entrySet().iterator();
				while (iter.hasNext()) {
					Map.Entry<Integer, String> entry = iter.next();
					allSlots.add(entry.getKey());
					value = entry.getValue();
					regNo = value.substring(0, value.indexOf(" ", 0));
					allCarRegs.add(regNo);
					colour = value.substring(value.indexOf(" ", 0) + 1);
					allCarColour.add(colour);
				}
				System.out.println("Slot No.");
				allSlots.forEach(a -> System.out.println(a));
				System.out.println("Registration No");
				allCarRegs.forEach(a -> System.out.println(a));
				System.out.println("Colour");
				allCarColour.forEach(a -> System.out.println(a));
				input = scan.next();
			} else if ("registration_numbers_for_cars_with_colour".equals(input)) {
				String inpColour = scan.next();
				String value = null;
				Iterator<Map.Entry<Integer, String>> iter = carDetails.entrySet().iterator();
				while (iter.hasNext()) {
					Map.Entry<Integer, String> entry = iter.next();
					value = entry.getValue();
					if(value.substring(value.indexOf(" ", 0) + 1).equals(inpColour)) {
						System.out.print(value.substring(0, value.indexOf(" ", 0) + 1) + " ");
					}
				}
				input = scan.next();
			} else if ("slot_numbers_for_cars_with_colour".equals(input)) {
				String inpColour = scan.next();
				String value = null;
				Iterator<Map.Entry<Integer, String>> iter = carDetails.entrySet().iterator();
				while (iter.hasNext()) {
					Map.Entry<Integer, String> entry = iter.next();
					value = entry.getValue();
					if(value.substring(value.indexOf(" ", 0) + 1).equals(inpColour)) {
						System.out.print(entry.getKey() + " ");
					}
				}
				input = scan.next();
			} else if ("slot_number_for_registration_number".equals(input)) {
				String regNoForSlot = scan.next();
				String value = null;
				Integer count = 0;
				Iterator<Map.Entry<Integer, String>> iter = carDetails.entrySet().iterator();
				while (iter.hasNext()) {
					Map.Entry<Integer, String> entry = iter.next();
					value = entry.getValue();
					if(value.substring(0, value.indexOf(" ", 0)).equals(regNoForSlot)) {
						System.out.println(entry.getKey());
						count = 1;
					}
				}
				if(count == 0) {
					System.out.println("Not found");
				}
				input = scan.next();
			} else {
				commandCheck = true;
			}
		}
		if(commandCheck) {
			System.out.println("Invalid Command");
			System.out.println("Interactive command prompt exited");
		}
		scan.close();
	}
}
